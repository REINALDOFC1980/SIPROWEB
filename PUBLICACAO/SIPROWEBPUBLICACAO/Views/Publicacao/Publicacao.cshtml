@model SIPROSHAREDPUBLICACAO.Model.PublicacaoModel

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2 class="m-b-xxs">Publicação do processo.</h2>
        <small>Processos prontos para serem publicado em lotes.</small>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div id="Div_Publicar">
        @await Html.PartialAsync("_Qtd_Publicar")
    </div>
</div>


<div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>

                <i class="fa fa-tags modal-icon"></i>
                <h2 class="modal-title">Lote Gerado para Publicação </h2>
                <br />
                <form method="post" >
                    <button type="button" id="btnDOM" class="btn btn-primary btn-xs text-center">
                        <i class="fa fa-print"></i> Imprimir DOM
                    </button>
                </form>



            </div>


            <div class="modal-body">


                <form role="form_publicacao" id="form_publicacao">

                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Lote:</label>
                        <div class="col-lg-8">
                            <div class="input-group">
                                <input placeholder="" id="prt_lote" name="prt_lote" type="text" class="form-control form-control-sm" readonly required>
                                <span class="input-group-append">
                                    <button type="button" class="btn btn-sm btn-danger" id="btn_excluir">
                                        <i class="fa fa-trash-o"></i> Excluir Lote
                                    </button>
                                </span>
                            </div>

                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Responsável:</label>
                        <div class="col-lg-8"><input type="text" class="form-control" id="prt_usu_publicacao" name="prt_usu_publicacao" readonly></div>
                    </div>

                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Date de Geração:</label>
                        <div class="col-lg-8"><input type="text" class="form-control" id="prt_dt_lote" name="prt_dt_lote" readonly></div>
                    </div>

                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Quantidade:</label>
                        <div class="col-lg-8"><input type="text" class="form-control" id="prt_publicacao_qtd" name="prt_publicacao_qtd" readonly></div>
                    </div>

                    <hr />

                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Número DOM:</label>
                        <div class="col-lg-8">
                            <input type="text" class="form-control" id="prt_publicacao_dom" name="prt_publicacao_dom" required>
                            <span id="erro_numero_dom" style="color:#cc5965 ; display: none;"> Este campo é obrigatório.</span>
                        </div>

                    </div>
                    <div class="form-group row">
                        <label class="col-lg-4 col-form-label text-right">Data de Publicação:</label>
                        <div class="col-lg-8">
                            <input type="text" class="form-control" id="prt_dt_publicacao" name="prt_dt_publicacao" data-mask="99/99/9999" required>
                            <span id="erro_data_publicacao" style="color:#cc5965 ; display: none;"> Este campo é obrigatório.</span>
                        </div>

                    </div>

                </form>

                <div class="modal-footer">
                    <br />
                    <button type="button" class="btn btn-block btn-primary" id="btn_atualizar"><i class="fa fa-print"></i> Gravar Publicação do DOM </button>
                </div>


            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>


<script type="module">

    function validarCampos() {
        var valido = true;

        // Validação do primeiro campo
        if ($("#prt_publicacao_dom").val().trim() === "") {
            $("#erro_numero_dom").show();
            valido = false;
        } else {
            $("#erro_numero_dom").hide();
        }

        // Validação do segundo campo
        if ($("#prt_dt_publicacao").val().trim() === "") {
            $("#erro_data_publicacao").show();
            valido = false;
        } else {
            $("#erro_data_publicacao").hide();
        }

        return valido;
    }

    $(document).on('click', '.gerarlote', function (e) {

        Notiflix.Confirm.Show(
            'Aviso!',
            'Tem certeza que deseja gerar um lote?',
            'Sim',
            'Não',
            async function okCb() {
                Notiflix.Loading.Standard('Aguarde...');
                try {
                    const response = await fetch('@Url.Action("GerarLote", "publicacao")', {
                        method: 'POST'
                    });


                    if (!response.ok) {
                        const data = await response.json();
                        Notiflix.Loading.Remove();

                        if (data.redirectTo) {
                            window.location.href = data.redirectTo;
                        } else {
                            Notiflix.Notify.Failure(data.message || 'Erro ao gerar o lote.');
                        }
                        return false;
                    }

                    Notiflix.Loading.Remove();
                    const html = await response.text();
                    $('#Div_Publicar').html(html);

                } catch (error) {
                    Notiflix.Loading.Remove();
                    Notiflix.Notify.Failure(error);           
                }
            },
            function cancelCb() {
                Notiflix.Loading.Remove();
            },
            {

            }
        );

    });


    $(document).on('click', '.localizarlote', function (e) {
       
        e.preventDefault();

        var valor = $(this).data('id'); 

        const buscarLote = async () => {
          
            Notiflix.Loading.Standard('Aguarde...');
            
            try {

                const response = await fetch('@Url.Action("Buscar_Lote", "Publicacao")?lote=' + valor);

                //Tratamento de erro!
                if (!response.ok ) {
                    const data = await response.json();
                    Notiflix.Loading.Remove();

                    if (data.redirectTo) {
                        window.location.href = data.redirectTo; //Erros 500 e NotFoud
                    } else {
                        Notiflix.Notify.Failure(data.message); //Erros 400 outros
                    }
                    return false;
                }

                if (data.publicacaoModel) {
                    let publicacao = data.publicacaoModel;
                    $('#prt_lote').val(publicacao.prt_lote);
                    $('#prt_usu_publicacao').val(publicacao.prt_publicacao_dom);
                    $('#prt_dt_lote').val(publicacao.prt_dt_lote);
                    $('#prt_publicacao_qtd').val(publicacao.prt_publicacao_qtd);
                    $('#myModal').modal('show');
                }

            } catch (error) {
                Notiflix.Notify.Failure('Erro de comunicação com o servidor.');
                console.error(error);
            } finally {
                Notiflix.Loading.Remove();
            }
        };

        // Chama a função async
        buscarLote();
    });


    $(document).on('click', '#btn_atualizar', function (e) {

        //validando os ultimos campos
        if (!validarCampos()) {
            return false;
        }

        if ($("#form_publicacao").valid()) {

            var formData = new FormData($('#form_publicacao')[0]);

            Notiflix.Confirm.Show(
                'Aviso!',
                'Tem certeza registrar os dados da publicação?',
                'Sim',
                'Não',
                async function okCb() {
                    Notiflix.Loading.Standard('Aguarde...');

                    try {
                        const response = await fetch('@Url.Action("AtualizarPublicacao", "publicacao")', {
                            method: 'POST',
                            body: formData
                        });
                 
                        //Tratamento de erro!
                        if (!response.ok) {
                            
                            Notiflix.Loading.Remove();
                            
                            const data = await response.json();                           

                            if (data.redirectTo) {
                                window.location.href = data.redirectTo; //Erros 500 e NotFoud
                            } else {
                                Notiflix.Notify.Failure(data.message); //Erros 400 outros
                            }
                            return false;
                        }

                        $('#myModal').modal('hide');
                        Notiflix.Loading.Remove();             
                        const html = await response.text();
                        $('#Div_Publicar').html(html);

                    } catch (error) {
                        Notiflix.Notify.Failure(error);
                        Notiflix.Loading.Remove();
                    }

                },
                function cancelCb() {
                    Notiflix.Loading.Remove();
                }
            );

        }


    });


    $(document).on('click', '#btn_excluir', async function () {

        var Lote = $('#prt_lote').val()

        Notiflix.Confirm.Show(
            'Aviso!',
            'Tem certeza que deseja excluir o lote: ' + Lote + ' ?',
            'Sim',
            'Não',
            async function okCb() {

                Notiflix.Loading.Standard('Aguarde...');

                try {
                    const response = await fetch(`@Url.Action("ExcluirLote", "Publicacao")?lote=${encodeURIComponent(Lote)}`, {
                    method: 'POST'// Aqui o corpo com o lote
                    });                    
                   
                 

                    //Tratamento de erro!
                    if (!response.ok) {
                        const data = await response.json();
                        Notiflix.Loading.Remove();

                        if (data.redirectTo) {
                            window.location.href = data.redirectTo; //Erros 500 e NotFoud
                        } else {
                            Notiflix.Notify.Failure(data.message); //Erros 400 outros
                        }
                        return false;
                    }

                    Notiflix.Loading.Remove();
                    $('#myModal').modal('hide'); 

                    const html = await response.text();
                    $('#Div_Publicar').html(html);

                } catch (error) {
                    console.log(error)
                    Notiflix.Notify.Failure(error);
                    Notiflix.Loading.Remove();
                }                
            },
            function cancelCb() {
                Notiflix.Loading.Remove();
            }
           
        );
    });


    $(document).on('click', '#btnDOM', async function () {


        var Lote = $('#prt_lote').val()

        Notiflix.Confirm.Show(
            'Aviso!',
            'Tem certeza que deseja gerar arquivo DOM para o : ' + Lote + ' ?',
            'Sim',
            'Não',
            async function okCb() {
         
                window.location.href = '@Url.Action("GerarWord", "Publicacao")' + '?lote=' + Lote;
              
            },
            function cancelCb() {
                Notiflix.Loading.Remove();
            },
           
        );
    });

</script>