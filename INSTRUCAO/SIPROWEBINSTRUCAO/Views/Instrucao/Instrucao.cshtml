@model List<SIPROSHAREDINSTRUCAO.Models.InstrucaoProcessosModel>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Instrução de Processos</h2>

    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content  animated fadeInRight">

    <div class="row">
        <div class="col-sm-12">
            <div class="ibox">
                <div class="ibox-content">                    
                    <h3><i class="fa fa-list-ul"></i>  Lista de Processos para serem instruidos </h3>
                    <small>Buscar por: Processo, AIT e Usuário</small>
                    <div class="input-group">
                        <input type="text" placeholder=" " class="input form-control" id="Vlo_Busca">
                        <span class="input-group-append">
                            <button type="button" class="btn btn btn-primary" id="btmLocalizarProtocolo"> <i class="fa fa-search"></i> Localizar</button>
                        </span>
                    </div>
                    <div class="clients-list">
                        <div class="full-height-scroll">
                            <div id="div_listaInstrucao">
                                @await Html.PartialAsync("_ListaInstrucao")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>

<script>
    let isProcessing = false;

    function mostrarLoading() {
        Notiflix.Loading.Standard('Aguarde...');
    }

    async function LocalizarProtocolo(vlobusca) {
        try {
           
            Notiflix.Loading.Standard('Buscando...');
            const response = await fetch(`@Url.Action("BuscarProtocolo", "Instrucao")?vlobusca=${encodeURIComponent(vlobusca)}`);


            if (isProcessing) return;
            isProcessing = true;

            // ❌ ERRO
            if (!response.ok) {
                const data = await response.json(); 

                isProcessing = false;
                Notiflix.Loading.Remove();

                if (data.redirectTo) {
                    window.location.href = data.redirectTo;
                } else {
                    Notiflix.Notify.Failure(data.message || 'Erro inesperado.');
                }
                return false;
            }

            // ✅ OK
            const html = await response.text(); // PartialView como HTML
            document.getElementById('div_listaInstrucao').innerHTML = html;

            console.log('passou1');
            isProcessing = false;
            Notiflix.Loading.Remove();

        } catch (error) {
            isProcessing = false;
            Notiflix.Loading.Remove();
            Notiflix.Notify.Failure('Erro de comunicação com o servidor.');
            console.error(error);
        }
    }



    $('#btmLocalizarProtocolo').click(function (event) {
        var vlobusca = $('#Vlo_Busca').val();
        event.preventDefault();
        LocalizarProtocolo(vlobusca);
    });


    $('#Vlo_Busca').on('input', function () {
        var searchTerm = $(this).val();
        if (searchTerm === '') {
            LocalizarProtocolo("Todos"); // Busca todos os resultados
        }
    });






</script>
